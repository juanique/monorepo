module(
    name = "monorepo",
    version = "1.0",
)

bazel_dep(name = "rules_python", version = "0.37.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_python_gazelle_plugin", version = "0.37.1")
bazel_dep(name = "rules_proto_grpc_python", version = "5.0.0")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.39.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "zlib", version = "1.3.1.bcr.3")
bazel_dep(name = "aspect_rules_js", version = "2.1.0")

# Pip
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock.txt",
    # download_only = True,
)

use_repo(pip, "pip")

# Go deps
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_spf13_cobra",
    "com_github_docker_docker",
    "org_golang_x_oauth2",
    "com_github_google_go_github_v38",
    "com_github_libgit2_git2go_v33",
    "com_github_stretchr_testify",
)

go_deps.module_override(
    patch_strip = 1,
    patches = [
        "//third_party:com_github_libgit2_git2go_v33/com_github_libgit2_git2go_v33.patch",
    ],
    path = "github.com/libgit2/git2go/v33",
)

# rules_js
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")
