module(
    name = "monorepo",
    version = "1.0",
)

bazel_dep(name = "aspect_rules_js", version = "2.1.0")
bazel_dep(name = "protobuf", version = "27.3")
bazel_dep(name = "grpc", version = "1.66.0.bcr.3")
bazel_dep(name = "aspect_rules_swc", version = "2.0.1")
bazel_dep(name = "aspect_rules_ts", version = "3.3.1")
bazel_dep(name = "rules_perl", version = "0.2.4")

# NodeJS version is determined by rules_nodejs default
bazel_dep(name = "rules_nodejs", version = "6.3.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    # Disable lifecycle hooks for hermeticity.
    lifecycle_hooks = {
        "*": [],
    },
    # This is important to prevent downloading prebuilt binaries for every platform
    # *cough cough* swc/esbuild/etc.
    no_optional = True,
    npmrc = "//:.npmrc",
    patch_args = {"*": ["-p1"]},
    pnpm_lock = "//:pnpm-lock.yaml",
    quiet = False,
    use_home_npmrc = False,
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")

### Rules TS
rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps(
    ts_version_from = "//:package.json",
)
use_repo(rules_ts_ext, "npm_typescript")
