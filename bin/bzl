#!/bin/bash

GIT_ROOT=`git rev-parse --git-dir`
REPO_ROOT=`realpath $GIT_ROOT | sed 's/....$//'`
echo "Repo root is $REPO_ROOT"
BUILD_OUTPUT=/tmp/build_output
USER_ID=`id -u`
CURRENT_DIR=`pwd`
DOCKER_SOCK=/var/run/docker.sock
CACHE_DIR=$HOME/.cache

for i in "$@"; do
  case $i in
    -b=*|--build=*)
      BUILD="${i#*=}"
      shift # past argument=value
      ;;
    -s=*|--shell=*)
      START_SHELL="${i#*=}"
      shift # past argument=value
      ;;
    *)
      # unknown option
      ;;
  esac
done

if [ "$BUILD" = "true" ]; then
    if docker ps -a | grep bazel-build
    then
        docker rm -f bazel-build
    fi
    docker build -t juanzolotoochin/ubuntu-build ./docker_images/ubuntu-build
fi

if [[ ! -d $CACHE_DIR ]]; then
    echo "Creating $CACHE_DIR"
    mkdir -p $CACHE_DIR
    chmod 777 -R $CACHE_DIR
fi

if docker ps -a -f status=exited | grep bazel-build
then
    echo "Build container was exited. Removing..."
    docker rm bazel-build
fi

if docker ps | grep -q bazel-build
then
    echo "Build container already running."
else
    echo "Starting build container..."
    docker run -d \
    --name=bazel-build \
    -e HOME=$HOME \
    -e USER=$USER_ID \
    -u $(id -u ${USER_ID}):$(id -g ${USER_d}) \
    --privileged \
    -p 127.0.0.1:5678:5678 \
    --network=br0 \
    -v $DOCKER_SOCK:$DOCKER_SOCK \
    -v $REPO_ROOT:$REPO_ROOT \
    -v $BUILD_OUTPUT:$BUILD_OUTPUT \
    -v $CACHE_DIR:/$CACHE_DIR \
    -w $REPO_ROOT juanzolotoochin/ubuntu-build tail -f /dev/null
fi

if [ "$START_SHELL" = "true" ]; then
    docker exec -it -e HOME=$HOME -e USER=$USER_ID -u=$USER_ID  -w $CURRENT_DIR bazel-build /bin/bash
else
    docker exec -it -e HOME=$HOME -e USER=$USER_ID -u=$USER_ID  -w $CURRENT_DIR bazel-build bazelisk $@
fi
