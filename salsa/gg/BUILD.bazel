load("@pip_deps//:requirements.bzl", "requirement")
load("//:bazel/python.bzl", "py_binary", "py_library", "py_test")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@io_bazel_rules_docker//lang:image.bzl", "app_layer")

py_library(
    name = "gg",
    srcs = [
        "gg.py",
    ],
    deps = [
        "//salsa/os:environ_ctx",
        requirement("rich"),
        requirement("GitPython"),
        requirement("pydantic"),
        requirement("PyGithub"),
        requirement("Unidecode"),
    ],
)

py_test(
    name = "gg_test",
    srcs = ["gg_test.py"],
    deps = [
        ":gg",
        "//salsa/util:subsets",
        requirement("GitPython"),
    ],
)

py_binary(
    name = "gg_cli",
    srcs = [
        "gg_cli.py",
    ],
    deps = [
        ":gg",
        requirement("GitPython"),
        requirement("rich"),
        requirement("click"),
    ],
)

py_binary(
    name = "gg_example",
    srcs = ["gg_example.py"],
    deps = [
        ":gg",
        requirement("GitPython"),
    ],
)

container_image(
    name = "gg_docker_2",
    base = "@ubuntu//image",
    cmd = ["tail -f /dev/null"],
    files = [
        ":gg_cli",
    ],
)

app_layer(
    name = "gg_docker",
    base = "@build//image",
    binary = ":gg_cli",
    create_empty_workspace_dir = True,
    # entrypoint = ["/usr/bin/python3.10"],
)

container_push(
    name = "gg_docker_push",
    format = "Docker",
    image = ":gg_docker",
    registry = "docker.io",
    repository = "juanzolotoochin/gg_cli",
    tag = "latest",
)
